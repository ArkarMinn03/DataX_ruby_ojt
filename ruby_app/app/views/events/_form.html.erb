<% flash.discard %>
<%= form_with(model: event, local: true) do |form| %>
  <div class="mb-3">
    <%= form.label t('labels.event.title'), class: "form-label" %>
    <%= form.text_field :title, class: "form-control", required: true %>
    <% if flash[:errors].present? && flash[:errors]["title"].present? %>
      <% flash[:errors]["title"].each do |error| %>
        <span style="color: red; display: block;"><%= error %></span>
      <% end %>
    <% end %>
  </div>
  <div class="mb-3">
    <div class="row">
      <div class="col">
        <%= form.label t('labels.event.start_time'), class: "form-label" %>
        <div class="row">
          <div class="col">
            <%= form.date_field :start_date_part, id: "startDatePart", class: "form-control", required: true %>
          </div>
          <div class="col">
            <%= form.time_field :start_time_part, id: "startTimePart", class: "form-control", required: true %>
          </div>
        </div>
        <% if flash[:errors].present? && flash[:errors]["start_time"].present? %>
          <% flash[:errors]["start_time"].each do |error| %>
            <span style="color: red; display: block;"><%= error %></span>
          <% end %>
        <% end %>
      </div>
      <div class="col">
        <%= form.label t('labels.event.end_time'), class: "form-label" %>
        <div class="row">
          <div class="col">
            <%= form.date_field :end_date_part, id: "endDatePart", class: "form-control", required: true %>
          </div>
          <div class="col">
            <%= form.time_field :end_time_part, id: "endTimePart", class: "form-control", required: true %>
          </div>
        </div>
        <% if flash[:errors].present? && flash[:errors]["end_time"].present? %>
          <% flash[:errors]["end_time"].each do |error| %>
            <span style="color: red; display: block;"><%= error %></span>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>
  <div class="mb-3">
    <%= form.label t('labels.event.description'), class: "form-label" %>
    <%= form.text_area :description, class: "form-control", required: true %>
    <% if flash[:errors].present? && flash[:errors]["description"].present? %>
      <% flash[:errors]["description"].each do |error| %>
        <span style="color: red; display: block;"><%= error %></span>
      <% end %>
    <% end %>
  </div>
  <div class="mb-3">
    <%= form.label t('labels.event.guests'), class: "form-label"  %>
    <%= form.collection_select :guest_ids, users, :id, :full_name, { selected: @guest_ids }, { id: "guests", multiple: true, class: "form-control", required: true } %>
    <% if flash[:errors].present? && flash[:errors]["guest_ids"].present? %>
      <% flash[:errors]["guest_ids"].each do |error| %>
        <span style="color: red; display: block;"><%= error %></span>
      <% end %>
    <% end %>
  </div>
  <div class="text-center">
    <% if local_assigns[:form_type] == :edit %>
      <%= form.submit t('buttons.common.update', data: "Event"), class: "btn btn-primary" %>
    <% else %>
      <%= form.submit t('buttons.common.create', data: "Event"), class: "btn btn-primary" %>
    <% end %>
  </div>
<% end %>

<script>
  var startDateField = $('#startDatePart');
  var startTimeField = $('#startTimePart');
  var endDateField = $('#endDatePart');
  var endTimeField = $('#endTimePart');

  function padToTwoDigits(number) {
    return number.toString().padStart(2, '0');
  }

  function setStartTime() {
    const now = new Date();

    var min = now.getMinutes();

    if (min > 0 && min < 5) {
      now.setMinutes(15);
    } else if (min > 5 && min < 20) {
      now.setMinutes(30);
    } else if (min > 20 && min < 35) {
      now.setMinutes(45);
    } else if (min > 35 && min < 50) {
      now.setMinutes(60);
    } else if (min > 50) {
      now.setMinutes(75);
    }

    var startHours = padToTwoDigits(now.getHours());
    var startMinutes = padToTwoDigits(now.getMinutes());
    var formattedStartTime = `${startHours}:${startMinutes}`;

    return formattedStartTime;
  }

  function addThirtyMinutes(startTime){
    const time = startTime.split(":");

    var endDateTime = new Date();
    endDateTime.setHours(parseInt(time[0]));
    endDateTime.setMinutes(parseInt(time[1]) + 30);

    var endHours = padToTwoDigits(endDateTime.getHours());
    var endMinutes = padToTwoDigits(endDateTime.getMinutes());
    var formattedEndTime = `${endHours}:${endMinutes}`;

    return formattedEndTime;
  }

  function updateEndDate() {
    endDateField.val(startDateField.val())
  }

  function updateEndTime() {
    endTimeField.val(addThirtyMinutes(startTimeField.val()));
  }

  startDateField.on('change', function() {
    if (!endDateField.val() || endDateField.val() < startDateField.val()) {
      updateEndDate();
      updateEndTime();
    }
  })

  startTimeField.on('change', function() {
    if ((startDateField.val() == endDateField.val()) && (addThirtyMinutes(startTimeField.val()) > endTimeField.val())) {
      updateEndTime();
    }
  })

  if(!startDateField.val()) {
    var now = new Date();
    var year = now.getFullYear();
    var month = padToTwoDigits(now.getMonth() + 1);
    var day = padToTwoDigits(now.getDate());
    var formattedDate = `${year}-${month}-${day}`;

    startDateField.val(formattedDate);
    endDateField.val(formattedDate);
  }

  if(!startTimeField.val()) {
    var formattedStartTime = setStartTime();

    var formattedEndTime = addThirtyMinutes(formattedStartTime)

    startTimeField.val(formattedStartTime)
    endTimeField.val(formattedEndTime)
  }

  <% if flash[:errors].present? %>
    $(document).ready(function() {
      $('#guests').select2({
        placeholder: "Select Guests",
        allowClear: true
      });
    })
  <% else %>
    document.addEventListener('turbo:load', function () {
      $('#guests').select2({
        placeholder: "Select Guests",
        allowClear: true
      });
    });
  <% end %>
</script>